{"mappings":"AAAA;AAEA,SAAS,UAAU,QAAQ;IACzB,OAAO,SAAS,SAAS,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK;AAChE;AAEA,SAAS,eAAe,MAAM;IAC5B,MAAM,yBAAyB,OAAO,QAAQ;IAC9C,IAAI,kBAAkB;IAEtB,IAAK,IAAI,IAAI,GAAG,IAAI,uBAAuB,MAAM,EAAE,IAAK;QACtD,IAAI,AAAC,CAAA,uBAAuB,MAAM,GAAG,CAAA,IAAK,MAAM,KAAK,MAAM,GACzD,mBAAmB;QAGrB,mBAAmB,sBAAsB,CAAC,EAAE;IAC9C;IAEA,OAAO;AACT;AAEA,SAAS,aAAa,IAAI;IACxB,MAAM,YAAY,EAAE;IAEpB,KAAK,MAAM,YAAY,KAAK,QAAQ,CAClC,UAAU,IAAI,CAAC;QACb,MAAM,SAAS,WAAW,CAAC,IAAI;QAC/B,UAAU,SAAS,OAAO,CAAC,QAAQ;QACnC,QAAQ,UAAU;QAClB,KAAK,SAAS,OAAO,CAAC,GAAG;IAC3B;IAGF,OAAO;AACT;AAEA,SAAS,SAAS,IAAI;IACpB,MAAM,YAAY,aAAa;IAE/B,UAAU,IAAI,CACZ,CAAC,eAAe,iBACd,eAAe,MAAM,GAAG,cAAc,MAAM;IAGhD,MAAM,aAAa,KAAK,SAAS;IAEjC,KAAK,MAAM,YAAY,UAAW;QAChC,MAAM,WAAW,SAAS,aAAa,CAAC;QAExC,SAAS,WAAW,GAAG,SAAS,IAAI;QACpC,SAAS,OAAO,CAAC,QAAQ,GAAG,SAAS,QAAQ;QAC7C,SAAS,OAAO,CAAC,MAAM,GAAG,eAAe,SAAS,MAAM;QACxD,SAAS,OAAO,CAAC,GAAG,GAAG,SAAS,GAAG;QAEnC,WAAW,MAAM,CAAC;IACpB;IAEA,OAAO;AACT;AAEA,MAAM,iBAAiB,SAAS,aAAa,CAAC;AAE9C,eAAe,WAAW,CAAC,SAAS","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nfunction getSalary(employee) {\n  return parseInt(employee.dataset.salary.slice(1).replace(',', ''));\n}\n\nfunction seperateSalary(salary) {\n  const salaryBeforeSeparation = salary.toString();\n  let separatedSalary = '$';\n\n  for (let i = 0; i < salaryBeforeSeparation.length; i++) {\n    if ((salaryBeforeSeparation.length - i) % 3 === 0 && i !== 0) {\n      separatedSalary += ',';\n    }\n\n    separatedSalary += salaryBeforeSeparation[i];\n  }\n\n  return separatedSalary;\n}\n\nfunction getEmployees(list) {\n  const employees = [];\n\n  for (const employee of list.children) {\n    employees.push({\n      name: employee.textContent.trim(),\n      position: employee.dataset.position,\n      salary: getSalary(employee),\n      age: employee.dataset.age,\n    });\n  }\n\n  return employees;\n}\n\nfunction sortList(list) {\n  const employees = getEmployees(list);\n\n  employees.sort(\n    (firstEmployee, secondEmployee) =>\n      secondEmployee.salary - firstEmployee.salary,\n  );\n\n  const sortedList = list.cloneNode();\n\n  for (const employee of employees) {\n    const listItem = document.createElement('li');\n\n    listItem.textContent = employee.name;\n    listItem.dataset.position = employee.position;\n    listItem.dataset.salary = seperateSalary(employee.salary);\n    listItem.dataset.age = employee.age;\n\n    sortedList.append(listItem);\n  }\n\n  return sortedList;\n}\n\nconst listOfEmolyees = document.querySelector('ul');\n\nlistOfEmolyees.replaceWith(sortList(listOfEmolyees));\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}